var v1 i32 := 86
var v2 i32 := 86

// test vars in binary ops
fn test1() {
    printStr("v1 = -v1 * 2 + v1 = -86")
    v1 = -v1 * 2 + v1
    printInt(v1)

    printStr("v2 = -v2 * 2 + -v2 = -258")
    v2 = -v2 * 2 + -v2
    printInt(v2)
}

// test vars in binary ops
fn test2() {
    printStr("-3 * -3 + 2 = 11")
    v1 = -3 * -3 + 2
    printInt(v1)

    printStr("-3 * 3 + 2 = -7")
    v1 = -3 * 3 + 2
    printInt(v1)
}

fn test3() {
    printStr("2 * 2 - 4 * 2 = -4")
    v1 = 2 * 2 - 4 * 2
    printInt(v1)

    printStr("2 * 2 - 4 * 4 + 3 * 3 = -3")
    v1 = 2 * 2 - 4 * 4 + 3 * 3
    printInt(v1)
}

fn test4() {
    printStr("2 - (3 + 3) = -4")
    v1 = 2 - (3 + 3)
    printInt(v1)

    printStr("2 - (3 + 3) + -2 * (-1 + 3) = -8")
    v1 = 2 - (3 + 3) + -2 * (-1 + 3)
    printInt(v1)

    printStr("2 + 3 * (1 + 2 * 3) = 23")
    v1 = 2 + 3 * (1 + 2 * 3)
    printInt(v1)
}

fn main() {
    test1()
    printStr("")
    test2()
    printStr("")
    test3()
    printStr("")
    test4()
}
