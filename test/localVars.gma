g1 i32 := -86

// 0 args, 3 local vars
// -> 3 * 8byte = 24byte
// -> (multiple of 16) = 32byte frame
fn test() {
    l1 bool := true
    l2 i32 := 420

    for i i32, 4 {
        i2 i32 := i * 2
        print(itos(i2))
        print(" ")
    }

    print("\n")
}

// 1 args, 2 local vars
// -> 3 * 8byte = 24byte
// -> (multiple of 16) = 32byte frame
fn test2(a1 i32) {
    l1 i32 := a1 - 2 * a1
    l2 i32 := l1 * -2

    print(itos(l1))
    print("\n")
    print(itos(l2))
    print("\n")
}

// 0 args, 0 local vars
// -> 0 * 8byte = 0byte
// -> (multiple of 16) = 0byte frame
fn test3() {
    print(itos(g1))
    print("\n")
}

fn test4() {
    s str := "test string\n"
    print(s)

    s = "new string\n"
    print(s)
}

fn test5() {
    print("g1 > 69 -> ")
    if g1 > 69 {
        l1 i32 := -69
        print(itos(l1))
    } else {
        l1 i32 := 69
        print(itos(l1))
    }

    print("\ng1 < 69 -> ")
    if g1 < 69 {
        l1 i32 := -69
        print(itos(l1))
    } else {
        l1 i32 := 69
        print(itos(l1))
    }

    print("\n")
}

fn main() {
    test()
    print("-------\n")
    test2(g1)
    print("-------\n")
    test3()
    print("-------\n")
    test4()
    print("-------\n")
    test5()
}
