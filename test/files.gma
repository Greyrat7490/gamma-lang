import "io.gma"

path :: "test/txt/test1\0"

fn testCurPath() {
    path := [PATH_MAX]char{}
    if getcwd(path as *char, PATH_MAX) == false {
        print("[ERROR] could not get current dir\n")
        exit(1)
    }

    print("current dir: ")
    for i u64, PATH_MAX {
        print(ctos(path[i]))
    }
    print(ctos('\n'))
}

fn testCreate() {
    content :: "test writing to created file\n"

    file := create(path as *char)
    if file < 0 {
        print("[ERROR] could not open/create ") print(path) print(ctos('\n'))
        print(itos(file)) print(ctos('\n'))
        exit(1)
    } else {
        print("opened/created ") print(path) print(ctos('\n'))
    }

    if write(file, content) < 0 {
        print("[ERROR] could not write to file\n")
        exit(1)
    } else {
        print("wrote to file\n")
    }

    if close(file) < 0 {
        print("[ERROR] could not close file ") print(path) print(ctos('\n'))
        exit(1)
    }
}

fn printFile(path str) {
    file := open(path as *char, O_RDONLY)

    BUF_SIZE u64 :: 1024
    buf := [BUF_SIZE]char{}

    size := read(file, buf as *char, BUF_SIZE)

    print(ctos('\"'))
    for i i64, size {
        print(ctos(buf[i]))
    }
    print(ctos('\"'))

    if close(file) < 0 {
        print("[ERROR] could not close file ") print(path) print(ctos('\n'))
        exit(1)
    }
}

fn testAppend() {
    printFile(path) print(ctos('\n'))

    file := open(path as *char, O_RDWR | O_APPEND)
    _ := write(file, "appended to file\n")
    if close(file) < 0 {
        print("[ERROR] could not close file ") print(path) print(ctos('\n'))
        exit(1)
    }

    printFile(path) print(ctos('\n'))
}

fn main() {
    testCurPath()
    print("------\n")

    testCreate()
    print("------\n")

    testAppend()
}
