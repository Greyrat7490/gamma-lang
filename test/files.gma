import "io.gma"

path :: "test/txt/test1\0"

fn testCurPath() {
    path := [PATH_MAX]char{}
    if getcwd(path as *char, PATH_MAX) == false {
        printStr("[ERROR] could not get current dir\n")
        exit(1)
    }

    printStr("current dir: ")
    for i i32, PATH_MAX {
        printChar(path[i])
    }
    printChar('\n')
}

fn testCreate() {
    content :: "test writing to created file\n"

    file := create(path as *char)
    if file < 0 {
        printStr("[ERROR] could not open/create ") printStr(path) printChar('\n')
        printInt(file) printChar('\n')
        exit(1)
    } else {
        printStr("opened/created ") printStr(path) printChar('\n')
    }

    if write(file, content) < 0 {
        printStr("[ERROR] could not write to file\n")
        exit(1)
    } else {
        printStr("wrote to file\n")
    }

    if close(file) < 0 {
        printStr("[ERROR] could not close file ") printStr(path) printChar('\n')
        exit(1)
    }
}

fn printFile(path str) {
    file := open(path as *char, O_RDONLY)

    BUF_SIZE :: 1024
    buf := [BUF_SIZE]char{}

    size := read(file, buf as *char, BUF_SIZE)

    printChar('\"')
    for i i64, size {
        printChar(buf[i])
    }
    printChar('\"')

    if close(file) < 0 {
        printStr("[ERROR] could not close file ") printStr(path) printChar('\n')
        exit(1)
    }
}

fn testAppend() {
    printFile(path) printChar('\n')

    file := open(path as *char, O_RDWR | O_APPEND)
    _ := write(file, "appended to file\n")
    if close(file) < 0 {
        printStr("[ERROR] could not close file ") printStr(path) printChar('\n')
        exit(1)
    }

    printFile(path) printChar('\n')
}

fn main() {
    testCurPath()
    printStr("------\n")

    testCreate()
    printStr("------\n")

    testAppend()
}
