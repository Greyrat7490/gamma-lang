fn testChar(c char) {
    print(ctos(c)) print("\n")

    c2 char := 'a'
    print(ctos(c2)) print("\n")
}

fn testIntSizes(i i8) {
    print(itos(i)) print("\n")

    i2 i8 := 69
    print(itos(i2)) print("\n")
}

fn testUnsigned(u u8) {
    print(utos(u)) print("\n")

    u1 u8 := 0x10
    print(utos(u1)) print("\n")

    print(utos(0x8 + 0x8)) print("\n")

    u2 u32 := 0x10
    u3 u32 := 0x10
    print(utos(u2 * u3)) print("\n")
}

fn testConstEval() {
    print(itos(-10 * -10)) print("\n")
}

fn testManyInts(a1 i64, a2 i64, a3 i64, a4 i64, a5 i64, a6 i64, i i8) {
    print(itos(a1)) print("\n")
    print(itos(a2)) print("\n")
    print(itos(a3)) print("\n")
    print(itos(a4)) print("\n")
    print(itos(a5)) print("\n")
    print(itos(a6)) print("\n")
    print(itos(i)) print("\n")
}

fn testManyInts2(a1 i64, a2 i64, a3 i64, a4 i64, a5 i64, a6 i64, i i16) {
    print(itos(a1)) print("\n")
    print(itos(a2)) print("\n")
    print(itos(a3)) print("\n")
    print(itos(a4)) print("\n")
    print(itos(a5)) print("\n")
    print(itos(a6)) print("\n")
    print(itos(i)) print("\n")
}

fn testManyUints(a1 u64, a2 u64, a3 u64, a4 u64, a5 u64, a6 u64, u u8) {
    print(utos(a1)) print("\n")
    print(utos(a2)) print("\n")
    print(utos(a3)) print("\n")
    print(utos(a4)) print("\n")
    print(utos(a5)) print("\n")
    print(utos(a6)) print("\n")
    print(utos(u)) print("\n")
}

fn testMul(a1 u64, a2 u64) {
    print(utos(a1)) print(" * ") print(utos(a2)) print(" = ")
    print(utos(a1 * a2))
    print("\n")

    print(itos(-(a1 as i64))) print(" * ") print(itos(-(a2 as i64))) print(" = ")
    print(itos(-(a1 as i64) * -(a2 as i64)))
    print("\n")

    print(itos(a1 as i64)) print(" * ") print(itos(-(a2 as i64))) print(" = ")
    print(itos(a1 as i64 * -(a2 as i64)))
    print("\n")
}

fn testDiv(a1 u64, a2 u64) {
    print(utos(a1)) print(" / ") print(utos(a2)) print(" = ")
    print(utos(a1 / a2))
    print("\n")
}

fn main() {
    print("test char -----\n")
    testChar('x')

    print("\ntest int size -----\n")
    testIntSizes(-128)

    print("\ntest unsigned -----\n")
    testUnsigned(255)

    print("\ntest ConstEval -----\n")
    testConstEval()

    print("\ntest many args -----\n")
    testManyInts(-1, -2, -3, -4, -5, -6, -7)
    print("-----\n")
    testManyInts(0x7fffffffffffffff, 0x7fffffffffffffff, 0x7fffffffffffffff, 0x7fffffffffffffff, 0x7fffffffffffffff, 0x7fffffffffffffff, 0x7f)
    print("-----\n")
    testManyInts(-0x8000000000000000, -0x8000000000000000, -0x8000000000000000, -0x8000000000000000, -0x8000000000000000, -0x8000000000000000, -0x80)
    print("-----\n")
    testManyUints(0xffffffffffffffff, 0xfffffffffffffffe, 0xfffffffffffffffd, 0xfffffffffffffffc, 0xfffffffffffffffb, 0xfffffffffffffffa, 0xff)
    print("-----\n")
    testManyInts2(0xfffffffa, 0xfffffffb, 0xfffffffc, 0xfffffffd, 0xfffffffe, 0xffffffff, 0xfff)

    print("\ntest unsigned mul -----\n")
    testMul(0x10, 0x10)
    testMul(0x0fffffffffffffff, 0xf)    // some int overflows happen inside here (TODO: runtime errors for int overflows)
    testMul(0x0fffffffffffffff, 0x10)
    testMul(0x1111111111111111, 0xf)

    print("\ntest unsigned div -----\n")
    testDiv(0x100, 0x10)
    testDiv(0xeffffffffffffff1, 0xf)
    testDiv(0xfffffffffffffff0, 0x10)
    testDiv(0xffffffffffffffff, 0xf)
}
