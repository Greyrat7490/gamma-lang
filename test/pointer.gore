var v1 i32 := -86
var v2 i32 := 420
var p1 *i32 := v1       // TODO "&" to get addr

// TODO test pointer arithmetic

fn global_test() {
    printStr("p1 = &v1")

    printInt(v1)
    *p1 = -69
    printInt(v1)
    *p1 = v2
    printInt(v1)

    printStr("p1 = &v2")
    p1 = v2

    printInt(v2)
    *p1 = -13
    printInt(v2)
    *p1 = v1
    printInt(v2)
}

fn local_test() {
    var i1 i32 := 86
    var i2 i32 := -69

    printStr("p1 = &i1")
    var lp1 *i32 := i1

    printInt(i1)
    *lp1 = 420
    printInt(i1)
    *lp1 = i2
    printInt(i1)

    printStr("p1 = &i2")
    lp1 = i2

    printInt(i2)
    *lp1 = -420
    printInt(i2)
    *lp1 = i1
    printInt(i2)
}

fn test_deref_global() {
    printStr("(*p1) v2 = 86")
    v2 = 86
    printInt(*p1)


    printStr("*p1 = 2 * *p1 (2 * 86 = 172)")
              *p1 = 2 * *p1
    printInt(*p1)

    printStr("*p1 = *p1 / 2 (172 / 2 = 86)")
              *p1 = *p1 / 2 
    printInt(*p1)

    printStr("*p1 = 2 * *p1 + 10 * 2 (2 * 86 + 10 * 2 = 192)")
              *p1 = 2 * *p1 + 10 * 2
    printInt(*p1)
}

fn test_deref_local() {
    var p2 *i32 := v2

    printStr("(*p2) v2 = 86")
    v2 = 86
    printInt(*p2)

    printStr("*p2 = 2 * *p2 (2 * 86 = 172)")
              *p2 = 2 * *p2
    printInt(*p2)

    printStr("*p2 = *p2 / 2 (172 / 2 = 86)")
              *p2 = *p2 / 2 
    printInt(*p2)

    printStr("*p2 = 2 * *p2 + 10 * 2 (2 * 86 + 10 * 2 = 192)")
              *p2 = 2 * *p2 + 10 * 2
    printInt(*p2)
}

fn main() {
    printStr("global pointer test")
    global_test()

    printStr("local pointer test")
    local_test()

    printStr("test deref global pointer")
    test_deref_global()
    printStr("test deref local pointer")
    test_deref_local()
}
