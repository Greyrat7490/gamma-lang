var v1 i32 := -86
var v2 i32 := 420
var p1 *i32 := &v1

fn global_test() {
    printStr("p1 = &v1")

    printInt(v1)
    *p1 = -69
    printInt(v1)
    *p1 = v2
    printInt(v1)

    printStr("p1 = &v2")
    p1 = &v2

    printInt(v2)
    *p1 = -13
    printInt(v2)
    *p1 = v1
    printInt(v2)

    p1 = &v1
}

fn local_test() {
    var i1 i32 := 86
    var i2 i32 := -69

    printStr("lp1 = &i1")
    var lp1 *i32 := &i1

    printInt(i1)
    *lp1 = 420
    printInt(i1)
    *lp1 = i2
    printInt(i1)

    printStr("lp1 = &i2")
    lp1 = &i2

    printInt(i2)
    *lp1 = -420
    printInt(i2)
    *lp1 = i1
    printInt(i2)
}

fn test_prints() {
    printStr("pointer to global vars")
    var p2 *i32 := &v2

    printPtr(p1)
    printPtr(p2)

    printStr("pointer to local vars")
    var l1 i32 := 420
    var l2 i32 := 420

    var p3 *i32 := &l1
    var p4 *i32 := &l2

    printPtr(p3)
    printPtr(p4)

    var diff i32 := p3 - p1
    printStr("diff in bytes:")
    printInt(diff)
    printStr("~1MB difference (size of stack)") // - 2 pushs - 8 (first local var starts at rbp-8)

    printStr("stack size")
    diff = p3 - p1 + 2 * 8 + 8
    printStr("in bytes:")
    printInt(diff)
    printStr("in MB:")
    printInt(diff / 1024 / 1024)
}

fn main() {
    printStr("global pointer ----------")
    global_test()

    printStr("local pointer ----------")
    local_test()

    printStr("test printPtr ----------")
    test_prints()
}
