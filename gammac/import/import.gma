import "token/token.gma"

projectDir := ""
importDir := ""

IMPORTS_CAP :: 10

struct Imports {
    importedPaths [$]str,
    importedState [$]bool
    // true: fully imported
    // false: not fully import -> import cycle if imported again
}

fn addImport(path str, imports *Imports) -> bool {
    // check if already imported
    for i u64, imports.importedPaths.len {
        if imports.importedPaths[i] == path {
            // detect import cycle
            if imports.importedState[i] == false {
                printStr("[ERROR] import cycle detected:\n")
                for i u64, imports.importedPaths.len {
                    if imports.importedState[i] == false {
                        printChar('\t') printStr(imports.importedPaths[i])
                    }
                }
                exit(1)
            }
            printChar('\t') printStr(path)
            ret false
        }
    }

    imports.importedPaths[imports.importedPaths.len] = path
    imports.importedState[imports.importedState.len] = false
    ret true
}

fn ImportMain(path str, imports *Imports) -> Tokens {
    _ := addImport(path, imports)
    ret Tokenize(path)
}

fn InitImports() -> Imports {
    ret Imports{ [$]str{ IMPORTS_CAP }, [$]bool{ IMPORTS_CAP } }
}
